{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/api.jsx","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","request","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","error","setError","newMovie","setMovie","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","then","data","Response","Title","Plot","Poster","imdbID","App","setMovies","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aChCKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACfA,GACG,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,uCCT9BG,EAAO,uCAAG,WAAMd,GAAN,eAAAe,EAAA,sEACEC,MAAM,GAAD,OAHb,+CAGa,OAAehB,IADtB,cACfiB,EADe,yBAGdA,EAASC,QAHK,2CAAH,sDCKPC,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA6BH,mBAAS,MAAtC,mBAAOI,EAAP,KAAiBC,EAAjB,KAwBA,OACE,oCACE,0BAAMtB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQuB,QAAQ,eAAjC,eAIA,yBAAKvB,UAAU,WACb,2BACEwB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ1B,UAAW2B,IACT,QAAS,CAAE,YAAaR,IAE1BS,MAAOhC,EACPiC,SAAU,SAACC,GACTZ,EAASY,EAAMC,OAAOH,OACtBR,GAAS,OAIdD,GACC,uBAAGnB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEwB,KAAK,SACLxB,UAAU,kBACVgC,QAzDQ,WAClBtB,EAAQd,GACLqC,MAAK,SAACC,GACL,GAAsB,UAAlBA,EAAKC,SAIP,OAHAf,GAAS,QACTE,EAAS,MAKXA,EAAS,CACP1B,MAAOsC,EAAKE,MACZvC,YAAaqC,EAAKG,KAClBvC,OAAQoC,EAAKI,OACbvC,QAAQ,8BAAD,OAAgCmC,EAAKK,OAArC,KACP9B,OAAQyB,EAAKK,SAEfnB,GAAS,GACTF,EAAS,SAoCL,iBASF,yBAAKlB,UAAU,WACb,4BACEwB,KAAK,SACLxB,UAAU,oBACVgC,QAAS,WACPhB,EAASK,GACTC,EAAS,QALb,sBAaN,yBAAKtB,UAAU,aACZqB,GACC,oCACE,wBAAIrB,UAAU,SAAd,WACA,kBAAC,EAAcqB,Q,OCvFdmB,EAAM,WACjB,MAA4BvB,mBAASiB,GAArC,mBAAO7B,EAAP,KAAeoC,EAAf,KAUA,OACE,yBAAKzC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWgB,SAdA,SAACK,GAChB,IAAQtB,EAAYsB,EAAZtB,QAEHM,EAAOqC,MAAK,SAAAnC,GAAK,OAAIA,EAAMR,UAAYA,MAC1C0C,GAAU,SAAAE,GAAa,4BAAQA,GAAR,CAAuBtB,aCRpDuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.43e9c7d3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard/MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      movie\n      && <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=20ab0fad&t=';\n\nexport const request = async(title) => {\n  const response = await fetch(`${BASE_URL}${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { request } from '../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [newMovie, setMovie] = useState(null);\n\n  const searchMovie = () => {\n    request(title)\n      .then((data) => {\n        if (data.Response === 'False') {\n          setError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n          imdbId: data.imdbID,\n        });\n        setError(false);\n        setTitle('');\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input', { 'is-danger': error },\n              )}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(newMovie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        {newMovie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...newMovie} />\n          </>\n        )}\n      </div>\n    </>\n\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    const { imdbUrl } = newMovie;\n\n    if (!movies.some(movie => movie.imdbUrl === imdbUrl)) {\n      setMovies(currentMovies => [...currentMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}